/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.5).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ca.bc.gov.iamp.email.api;

import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-05-29T14:23:29.467-04:00")

@Api(value = "emails", description = "the emails API")
public interface EmailsApi {

    Logger log = LoggerFactory.getLogger(EmailsApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Sends a new email", nickname = "emailsPost", notes = "Endpoint used to send new emails", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "CREATED") })
    @RequestMapping(value = "/emails",
        consumes = { "multipart/form-data" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> _emailsPost(@ApiParam(value = "Email TO", required=true) @RequestParam(value="to", required=true)  List<String> to,@ApiParam(value = "Email Subject") @RequestParam(value="subject", required=false)  String subject,@ApiParam(value = "Email CC") @RequestParam(value="cc", required=false)  List<String> cc,@ApiParam(value = "Email BCC") @RequestParam(value="bcc", required=false)  List<String> bcc,@ApiParam(value = "Email Body") @RequestParam(value="body", required=false)  String body,@ApiParam(value = "Upload multiple files") @RequestParam(value="attachments", required=false)  List<org.springframework.web.multipart.MultipartFile> attachments) {
        return emailsPost(to, subject, cc, bcc, body, attachments);
    }

    // Override this method
    default ResponseEntity<Void> emailsPost(List<String> to,String subject,List<String> cc,List<String> bcc,String body,List<org.springframework.web.multipart.MultipartFile> attachments) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default EmailsApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
